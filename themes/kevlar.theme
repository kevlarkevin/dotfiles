#!/bin/bash


function is_vim_shell() {
    [ ! -z "$VIMRUNTIME" ] && printf "[\e[0;36mvim shell\e[0m]"
}

function pyPrompt() {
    local pyver=''
    if [ ! -z $(which python) ]; then
        pyver=$(python -V 2>&1 | sed 's/Python\ //')
    fi

    local venv=''
    if [ ! -z "$VIRTUAL_ENV" ]; then
        venv=$(basename $VIRTUAL_ENV)
    elif [ -z "$VIRTUAL_ENV" ]; then
        pypath=$(which python)
        case $pypath in
            /opt/local/bin/python | /usr/bin/python )
                venv="py";;
            *)
                venv="???" ;;
        esac
    fi

    printf "\e[32m${venv}${pyver}\e[0m"
}

function shortHost() {
    printf "$HOSTNAME" | awk -F '.' '{print $1}'
}

function __git_prompt {
    GIT_PS1_SHOWDIRTYSTATE=1
    [ `git config user.pair` ] && GIT_PS1_PAIR="`git config user.pair`@"
    __git_ps1 " $GIT_PS1_PAIR%s" | sed 's/ \([+*]\{1,\}\)$/\1/;s/^./\[/;s/$/\]/'
}

function prompt() {
    if [ $? -ne 0 ]; then
        PS1='\n\[\e[38;5;124m┌─[\e[0m\]$(pyPrompt) ${USER}@$(shortHost):$(dirs)  $(__git_prompt " (%s)")$(is_vim_shell)\n\[\e[38;5;124m\]└─▪ \[\e[0m\]'
    else
        PS1='\n┌─[$(pyPrompt) ${USER}@$(shortHost):$(dirs)  $(__git_prompt " (%s)")$(is_vim_shell)\n└─▪ '
    fi
    PS2="└─▪ "
    PS3="└─▪ "
}

PROMPT_COMMAND=prompt
